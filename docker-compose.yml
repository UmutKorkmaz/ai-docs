version: '3.8'

services:
  # Main Analytics Dashboard
  analytics-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///data/analytics.db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    volumes:
      - ./analytics_data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
      - database
    restart: unless-stopped
    networks:
      - analytics-network

  # Admin Panel
  admin-panel:
    build:
      context: .
      dockerfile: Dockerfile.admin
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=sqlite:///data/admin.db
      - ADMIN_SECRET_KEY=your-secret-key-change-this
      - ENVIRONMENT=production
    volumes:
      - ./admin_data:/app/admin_data
      - ./logs:/app/logs
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - analytics-network

  # Real-time Monitoring
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile.monitoring
    ports:
      - "8765:8765"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///data/analytics.db
      - ENVIRONMENT=production
    volumes:
      - ./monitoring_data:/app/monitoring_data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - analytics-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - analytics-network

  # Database (SQLite file storage)
  database:
    image: alpine:latest
    volumes:
      - ./analytics_data:/data/analytics
      - ./admin_data:/data/admin
      - ./monitoring_data:/data/monitoring
    command: tail -f /dev/null  # Keep container running
    networks:
      - analytics-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - analytics-dashboard
      - admin-panel
    restart: unless-stopped
    networks:
      - analytics-network

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - analytics-network

volumes:
  redis_data:
  grafana_data:

networks:
  analytics-network:
    driver: bridge