# Model Configuration for Customer Churn Prediction

# Individual Model Configurations
models:
  random_forest:
    class_name: "RandomForestClassifier"
    module: "sklearn.ensemble"
    parameters:
      n_estimators: 100
      max_depth: 10
      min_samples_split: 5
      min_samples_leaf: 2
      max_features: "sqrt"
      random_state: 42
      n_jobs: -1
      class_weight: "balanced"
    hyperparameter_space:
      n_estimators: [50, 100, 200, 300]
      max_depth: [5, 10, 15, 20, None]
      min_samples_split: [2, 5, 10]
      min_samples_leaf: [1, 2, 4]
      max_features: ["sqrt", "log2", None]

  xgboost:
    class_name: "XGBClassifier"
    module: "xgboost"
    parameters:
      n_estimators: 200
      learning_rate: 0.1
      max_depth: 6
      min_child_weight: 1
      subsample: 0.8
      colsample_bytree: 0.8
      random_state: 42
      use_label_encoder: false
      eval_metric: "logloss"
      objective: "binary:logistic"
    hyperparameter_space:
      n_estimators: [100, 200, 300, 500]
      learning_rate: [0.01, 0.05, 0.1, 0.2]
      max_depth: [4, 6, 8, 10]
      min_child_weight: [1, 3, 5]
      subsample: [0.6, 0.8, 1.0]
      colsample_bytree: [0.6, 0.8, 1.0]

  lightgbm:
    class_name: "LGBMClassifier"
    module: "lightgbm"
    parameters:
      n_estimators: 200
      learning_rate: 0.1
      max_depth: 6
      num_leaves: 31
      subsample: 0.8
      colsample_bytree: 0.8
      random_state: 42
      objective: "binary"
      metric: "binary_logloss"
      verbosity: -1
    hyperparameter_space:
      n_estimators: [100, 200, 300, 500]
      learning_rate: [0.01, 0.05, 0.1, 0.2]
      max_depth: [4, 6, 8, 10]
      num_leaves: [15, 31, 63, 127]
      subsample: [0.6, 0.8, 1.0]
      colsample_bytree: [0.6, 0.8, 1.0]

  logistic_regression:
    class_name: "LogisticRegression"
    module: "sklearn.linear_model"
    parameters:
      C: 1.0
      solver: "liblinear"
      penalty: "l2"
      random_state: 42
      max_iter: 1000
      class_weight: "balanced"
    hyperparameter_space:
      C: [0.001, 0.01, 0.1, 1.0, 10.0, 100.0]
      solver: ["liblinear", "lbfgs"]
      penalty: ["l1", "l2"]

# Ensemble Configuration
ensemble:
  method: "weighted_average"  # Options: "weighted_average", "stacking", "voting"
  weights: [0.25, 0.35, 0.25, 0.15]  # Weights for each model in order
  stacking_meta_model:
    class_name: "LogisticRegression"
    module: "sklearn.linear_model"
    parameters:
      C: 1.0
      random_state: 42

# Training Configuration
training:
  test_size: 0.2
  validation_size: 0.1
  random_state: 42
  cross_validation_folds: 5
  stratified_split: true
  shuffle: true

# Hyperparameter Optimization
hyperparameter_optimization:
  method: "bayesian"  # Options: "grid", "random", "bayesian"
  n_iterations: 50
  cv_folds: 5
  scoring: "roc_auc"
  n_jobs: -1
  random_state: 42
  early_stopping:
    enabled: true
    patience: 10
    min_delta: 0.001

# Feature Selection
feature_selection:
  method: "recursive_feature_elimination"  # Options: "none", "univariate", "recursive", "importance"
  n_features_to_select: 20
  scoring: "roc_auc"
  step: 1

# Model Evaluation
evaluation:
  metrics:
    - "accuracy"
    - "precision"
    - "recall"
    - "f1_score"
    - "roc_auc"
    - "pr_auc"
    - "log_loss"
  threshold: 0.5
  threshold_optimization:
    enabled: true
    method: "youden_j"  # Options: "youden_j", "precision_recall", "cost_sensitive"
    metric: "f1_score"

# Model Persistence
persistence:
  format: "joblib"  # Options: "joblib", "pickle", "onnx"
  compress: true
  include_metadata: true
  version_control:
    enabled: true
    provider: "mlflow"  # Options: "mlflow", "dvc", "git"

# Model Monitoring
monitoring:
  enabled: true
  drift_detection:
    method: "kolmogorov_smirnov"  # Options: "ks", "chi2", "population_stability"
    threshold: 0.05
    monitoring_window: "7d"
  performance_tracking:
    metrics: ["accuracy", "roc_auc", "drift_score"]
    evaluation_frequency: "1d"
  alerting:
    enabled: true
    channels: ["email", "slack"]
    thresholds:
      accuracy_drop: 0.1
      drift_score: 0.1

# Experiment Tracking
experiment_tracking:
  provider: "mlflow"
  experiment_name: "customer_churn_prediction"
  tracking_uri: "http://localhost:5000"
  log_models: true
  log_parameters: true
  log_metrics: true
  log_features: true
  log_predictions: false